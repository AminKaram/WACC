Terminals unused in grammar

   ERROR


State 50 conflicts: 1 shift/reduce
State 93 conflicts: 13 shift/reduce
State 94 conflicts: 1 shift/reduce
State 119 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: BEGIN func_list statement_seq END

    2 func_list: %empty
    3          | func_list function_declaration

    4 function_declaration: type ident LPAREN RPAREN IS statement END
    5                     | type ident LPAREN param_list RPAREN IS statement END

    6 param_list: param
    7           | param_list COMMA param

    8 param: type ident

    9 statement_seq: statement
   10              | statement_seq SEMICOLON statement

   11 statement: SKIP
   12          | RETURN expr
   13          | type ident ASSIGN assign_rhs
   14          | assign_lhs ASSIGN assign_rhs
   15          | READ assign_lhs
   16          | FREE expr
   17          | EXIT expr
   18          | PRINT expr
   19          | PRINTLN expr
   20          | BEGIN statement_seq END
   21          | IF expr THEN statement ELSE statement FI
   22          | WHILE expr DO statement DONE

   23 assign_lhs: ident
   24           | array_elem_lhs
   25           | pair_elem_lhs

   26 assign_rhs: expr
   27           | array_liter
   28           | NEWPAIR LPAREN expr COMMA expr RPAREN
   29           | pair_elem_rhs
   30           | CALL ident LPAREN RPAREN
   31           | CALL ident LPAREN arg_list RPAREN

   32 arg_list: expr
   33         | arg_list COMMA expr

   34 pair_elem_rhs: FST expr
   35              | SND expr

   36 pair_elem_lhs: FST expr
   37              | SND expr

   38 type: base_type
   39     | array_type
   40     | pair_type

   41 base_type: INT
   42          | BOOL
   43          | CHAR
   44          | STRING

   45 array_type: type LSQUARE RSQUARE

   46 pair_type: PAIR LPAREN pair_elem_type COMMA pair_elem_type RPAREN

   47 pair_elem_type: base_type
   48               | array_type
   49               | PAIR

   50 expr: int_liter
   51     | bool_liter
   52     | char_liter
   53     | str_liter
   54     | pair_liter
   55     | ident
   56     | array_elem_exp
   57     | unary_oper expr
   58     | expr binary_oper expr
   59     | LPAREN expr RPAREN

   60 unary_oper: BANG
   61           | LEN
   62           | ORD
   63           | CHR

   64 binary_oper: STAR
   65            | SLASH
   66            | MODULO
   67            | PLUS
   68            | MINUS
   69            | GREATER
   70            | GREATEREQUALS
   71            | LESS
   72            | LESSEQUALS
   73            | EQUALS
   74            | NOTEQUALS
   75            | LOGAND
   76            | LOGOR

   77 ident: IDENTIFIER

   78 array_elem_exp: ident array_index

   79 array_elem_lhs: ident array_index

   80 array_index: LSQUARE expr RSQUARE
   81            | array_index LSQUARE expr RSQUARE

   82 int_liter: int_sign INTEGER

   83 int_sign: %empty
   84         | PLUS
   85         | MINUS

   86 bool_liter: TRUE
   87           | FALSE

   88 char_liter: CHARLIT

   89 str_liter: STRINGLIT

   90 array_liter: RSQUARE expr_list LSQUARE

   91 expr_list: expr
   92          | expr_list COMMA expr

   93 pair_liter: NULL


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN (258) 1 20
END (259) 1 4 5 20
IF (260) 21
THEN (261) 21
ELSE (262) 21
FI (263) 21
WHILE (264) 22
DO (265) 22
DONE (266) 22
SKIP (267) 11
FREE (268) 16
EXIT (269) 17
TRUE (270) 86
FALSE (271) 87
IS (272) 4 5
RETURN (273) 12
CALL (274) 30 31
PAIR (275) 46 49
INT (276) 41
BOOL (277) 42
CHAR (278) 43
STRING (279) 44
NULL (280) 93
ASSIGN (281) 13 14
LESSEQUALS (282) 72
LESS (283) 71
GREATEREQUALS (284) 70
GREATER (285) 69
EQUALS (286) 73
BANG (287) 60
NOTEQUALS (288) 74
PLUS (289) 67 84
MINUS (290) 68 85
STAR (291) 64
SLASH (292) 65
MODULO (293) 66
LOGAND (294) 75
LOGOR (295) 76
LPAREN (296) 4 5 28 30 31 46 59
RPAREN (297) 4 5 28 30 31 46 59
LSQUARE (298) 45 80 81 90
RSQUARE (299) 45 80 81 90
SEMICOLON (300) 10
COMMA (301) 7 28 33 46 92
ERROR (302)
PRINT (303) 18
PRINTLN (304) 19
READ (305) 15
NEWPAIR (306) 28
FST (307) 34 36
SND (308) 35 37
LEN (309) 61
ORD (310) 62
CHR (311) 63
IDENTIFIER (312) 77
STRINGLIT (313) 89
CHARLIT (314) 88
INTEGER (315) 82


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
func_list (63)
    on left: 2 3, on right: 1 3
function_declaration (64)
    on left: 4 5, on right: 3
param_list (65)
    on left: 6 7, on right: 5 7
param (66)
    on left: 8, on right: 6 7
statement_seq (67)
    on left: 9 10, on right: 1 10 20
statement (68)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22, on right: 4 5 9 10
    21 22
assign_lhs (69)
    on left: 23 24 25, on right: 14 15
assign_rhs (70)
    on left: 26 27 28 29 30 31, on right: 13 14
arg_list (71)
    on left: 32 33, on right: 31 33
pair_elem_rhs (72)
    on left: 34 35, on right: 29
pair_elem_lhs (73)
    on left: 36 37, on right: 25
type (74)
    on left: 38 39 40, on right: 4 5 8 13 45
base_type (75)
    on left: 41 42 43 44, on right: 38 47
array_type (76)
    on left: 45, on right: 39 48
pair_type (77)
    on left: 46, on right: 40
pair_elem_type (78)
    on left: 47 48 49, on right: 46
expr (79)
    on left: 50 51 52 53 54 55 56 57 58 59, on right: 12 16 17 18 19
    21 22 26 28 32 33 34 35 36 37 57 58 59 80 81 91 92
unary_oper (80)
    on left: 60 61 62 63, on right: 57
binary_oper (81)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76, on right: 58
ident (82)
    on left: 77, on right: 4 5 8 13 23 30 31 55 78 79
array_elem_exp (83)
    on left: 78, on right: 56
array_elem_lhs (84)
    on left: 79, on right: 24
array_index (85)
    on left: 80 81, on right: 78 79 81
int_liter (86)
    on left: 82, on right: 50
int_sign (87)
    on left: 83 84 85, on right: 82
bool_liter (88)
    on left: 86 87, on right: 51
char_liter (89)
    on left: 88, on right: 52
str_liter (90)
    on left: 89, on right: 53
array_liter (91)
    on left: 90, on right: 27
expr_list (92)
    on left: 91 92, on right: 90 92
pair_liter (93)
    on left: 93, on right: 54


State 0

    0 $accept: . program $end

    BEGIN  shift, and go to state 1

    program  go to state 2


State 1

    1 program: BEGIN . func_list statement_seq END

    $default  reduce using rule 2 (func_list)

    func_list  go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: BEGIN func_list . statement_seq END
    3 func_list: func_list . function_declaration

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    function_declaration  go to state 23
    statement_seq         go to state 24
    statement             go to state 25
    assign_lhs            go to state 26
    pair_elem_lhs         go to state 27
    type                  go to state 28
    base_type             go to state 29
    array_type            go to state 30
    pair_type             go to state 31
    ident                 go to state 32
    array_elem_lhs        go to state 33


State 4

    0 $accept: program $end .

    $default  accept


State 5

   20 statement: BEGIN . statement_seq END

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement_seq   go to state 34
    statement       go to state 25
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 6

   21 statement: IF . expr THEN statement ELSE statement FI

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 48
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 7

   22 statement: WHILE . expr DO statement DONE

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 58
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 8

   11 statement: SKIP .

    $default  reduce using rule 11 (statement)


State 9

   16 statement: FREE . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 59
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 10

   17 statement: EXIT . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 60
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 11

   12 statement: RETURN . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 61
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 12

   46 pair_type: PAIR . LPAREN pair_elem_type COMMA pair_elem_type RPAREN

    LPAREN  shift, and go to state 62


State 13

   41 base_type: INT .

    $default  reduce using rule 41 (base_type)


State 14

   42 base_type: BOOL .

    $default  reduce using rule 42 (base_type)


State 15

   43 base_type: CHAR .

    $default  reduce using rule 43 (base_type)


State 16

   44 base_type: STRING .

    $default  reduce using rule 44 (base_type)


State 17

   18 statement: PRINT . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 63
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 18

   19 statement: PRINTLN . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 64
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 19

   15 statement: READ . assign_lhs

    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    assign_lhs      go to state 65
    pair_elem_lhs   go to state 27
    ident           go to state 32
    array_elem_lhs  go to state 33


State 20

   36 pair_elem_lhs: FST . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 66
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 21

   37 pair_elem_lhs: SND . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 67
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 22

   77 ident: IDENTIFIER .

    $default  reduce using rule 77 (ident)


State 23

    3 func_list: func_list function_declaration .

    $default  reduce using rule 3 (func_list)


State 24

    1 program: BEGIN func_list statement_seq . END
   10 statement_seq: statement_seq . SEMICOLON statement

    END        shift, and go to state 68
    SEMICOLON  shift, and go to state 69


State 25

    9 statement_seq: statement .

    $default  reduce using rule 9 (statement_seq)


State 26

   14 statement: assign_lhs . ASSIGN assign_rhs

    ASSIGN  shift, and go to state 70


State 27

   25 assign_lhs: pair_elem_lhs .

    $default  reduce using rule 25 (assign_lhs)


State 28

    4 function_declaration: type . ident LPAREN RPAREN IS statement END
    5                     | type . ident LPAREN param_list RPAREN IS statement END
   13 statement: type . ident ASSIGN assign_rhs
   45 array_type: type . LSQUARE RSQUARE

    LSQUARE     shift, and go to state 71
    IDENTIFIER  shift, and go to state 22

    ident  go to state 72


State 29

   38 type: base_type .

    $default  reduce using rule 38 (type)


State 30

   39 type: array_type .

    $default  reduce using rule 39 (type)


State 31

   40 type: pair_type .

    $default  reduce using rule 40 (type)


State 32

   23 assign_lhs: ident .
   79 array_elem_lhs: ident . array_index

    LSQUARE  shift, and go to state 73

    $default  reduce using rule 23 (assign_lhs)

    array_index  go to state 74


State 33

   24 assign_lhs: array_elem_lhs .

    $default  reduce using rule 24 (assign_lhs)


State 34

   10 statement_seq: statement_seq . SEMICOLON statement
   20 statement: BEGIN statement_seq . END

    END        shift, and go to state 75
    SEMICOLON  shift, and go to state 69


State 35

   13 statement: type . ident ASSIGN assign_rhs
   45 array_type: type . LSQUARE RSQUARE

    LSQUARE     shift, and go to state 71
    IDENTIFIER  shift, and go to state 22

    ident  go to state 76


State 36

   86 bool_liter: TRUE .

    $default  reduce using rule 86 (bool_liter)


State 37

   87 bool_liter: FALSE .

    $default  reduce using rule 87 (bool_liter)


State 38

   93 pair_liter: NULL .

    $default  reduce using rule 93 (pair_liter)


State 39

   60 unary_oper: BANG .

    $default  reduce using rule 60 (unary_oper)


State 40

   84 int_sign: PLUS .

    $default  reduce using rule 84 (int_sign)


State 41

   85 int_sign: MINUS .

    $default  reduce using rule 85 (int_sign)


State 42

   59 expr: LPAREN . expr RPAREN

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 77
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 43

   61 unary_oper: LEN .

    $default  reduce using rule 61 (unary_oper)


State 44

   62 unary_oper: ORD .

    $default  reduce using rule 62 (unary_oper)


State 45

   63 unary_oper: CHR .

    $default  reduce using rule 63 (unary_oper)


State 46

   89 str_liter: STRINGLIT .

    $default  reduce using rule 89 (str_liter)


State 47

   88 char_liter: CHARLIT .

    $default  reduce using rule 88 (char_liter)


State 48

   21 statement: IF expr . THEN statement ELSE statement FI
   58 expr: expr . binary_oper expr

    THEN           shift, and go to state 78
    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    binary_oper  go to state 92


State 49

   57 expr: unary_oper . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 93
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 50

   55 expr: ident .
   78 array_elem_exp: ident . array_index

    LSQUARE  shift, and go to state 73

    LSQUARE   [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)

    array_index  go to state 94


State 51

   56 expr: array_elem_exp .

    $default  reduce using rule 56 (expr)


State 52

   50 expr: int_liter .

    $default  reduce using rule 50 (expr)


State 53

   82 int_liter: int_sign . INTEGER

    INTEGER  shift, and go to state 95


State 54

   51 expr: bool_liter .

    $default  reduce using rule 51 (expr)


State 55

   52 expr: char_liter .

    $default  reduce using rule 52 (expr)


State 56

   53 expr: str_liter .

    $default  reduce using rule 53 (expr)


State 57

   54 expr: pair_liter .

    $default  reduce using rule 54 (expr)


State 58

   22 statement: WHILE expr . DO statement DONE
   58 expr: expr . binary_oper expr

    DO             shift, and go to state 96
    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    binary_oper  go to state 92


State 59

   16 statement: FREE expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 16 (statement)

    binary_oper  go to state 92


State 60

   17 statement: EXIT expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 17 (statement)

    binary_oper  go to state 92


State 61

   12 statement: RETURN expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 12 (statement)

    binary_oper  go to state 92


State 62

   46 pair_type: PAIR LPAREN . pair_elem_type COMMA pair_elem_type RPAREN

    PAIR    shift, and go to state 97
    INT     shift, and go to state 13
    BOOL    shift, and go to state 14
    CHAR    shift, and go to state 15
    STRING  shift, and go to state 16

    type            go to state 98
    base_type       go to state 99
    array_type      go to state 100
    pair_type       go to state 31
    pair_elem_type  go to state 101


State 63

   18 statement: PRINT expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 18 (statement)

    binary_oper  go to state 92


State 64

   19 statement: PRINTLN expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 19 (statement)

    binary_oper  go to state 92


State 65

   15 statement: READ assign_lhs .

    $default  reduce using rule 15 (statement)


State 66

   36 pair_elem_lhs: FST expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 36 (pair_elem_lhs)

    binary_oper  go to state 92


State 67

   37 pair_elem_lhs: SND expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 37 (pair_elem_lhs)

    binary_oper  go to state 92


State 68

    1 program: BEGIN func_list statement_seq END .

    $default  reduce using rule 1 (program)


State 69

   10 statement_seq: statement_seq SEMICOLON . statement

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement       go to state 102
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 70

   14 statement: assign_lhs ASSIGN . assign_rhs

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    CALL        shift, and go to state 103
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    RSQUARE     shift, and go to state 104
    NEWPAIR     shift, and go to state 105
    FST         shift, and go to state 106
    SND         shift, and go to state 107
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    assign_rhs      go to state 108
    pair_elem_rhs   go to state 109
    expr            go to state 110
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    array_liter     go to state 111
    pair_liter      go to state 57


State 71

   45 array_type: type LSQUARE . RSQUARE

    RSQUARE  shift, and go to state 112


State 72

    4 function_declaration: type ident . LPAREN RPAREN IS statement END
    5                     | type ident . LPAREN param_list RPAREN IS statement END
   13 statement: type ident . ASSIGN assign_rhs

    ASSIGN  shift, and go to state 113
    LPAREN  shift, and go to state 114


State 73

   80 array_index: LSQUARE . expr RSQUARE

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 115
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 74

   79 array_elem_lhs: ident array_index .
   81 array_index: array_index . LSQUARE expr RSQUARE

    LSQUARE  shift, and go to state 116

    $default  reduce using rule 79 (array_elem_lhs)


State 75

   20 statement: BEGIN statement_seq END .

    $default  reduce using rule 20 (statement)


State 76

   13 statement: type ident . ASSIGN assign_rhs

    ASSIGN  shift, and go to state 113


State 77

   58 expr: expr . binary_oper expr
   59     | LPAREN expr . RPAREN

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91
    RPAREN         shift, and go to state 117

    binary_oper  go to state 92


State 78

   21 statement: IF expr THEN . statement ELSE statement FI

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement       go to state 118
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 79

   72 binary_oper: LESSEQUALS .

    $default  reduce using rule 72 (binary_oper)


State 80

   71 binary_oper: LESS .

    $default  reduce using rule 71 (binary_oper)


State 81

   70 binary_oper: GREATEREQUALS .

    $default  reduce using rule 70 (binary_oper)


State 82

   69 binary_oper: GREATER .

    $default  reduce using rule 69 (binary_oper)


State 83

   73 binary_oper: EQUALS .

    $default  reduce using rule 73 (binary_oper)


State 84

   74 binary_oper: NOTEQUALS .

    $default  reduce using rule 74 (binary_oper)


State 85

   67 binary_oper: PLUS .

    $default  reduce using rule 67 (binary_oper)


State 86

   68 binary_oper: MINUS .

    $default  reduce using rule 68 (binary_oper)


State 87

   64 binary_oper: STAR .

    $default  reduce using rule 64 (binary_oper)


State 88

   65 binary_oper: SLASH .

    $default  reduce using rule 65 (binary_oper)


State 89

   66 binary_oper: MODULO .

    $default  reduce using rule 66 (binary_oper)


State 90

   75 binary_oper: LOGAND .

    $default  reduce using rule 75 (binary_oper)


State 91

   76 binary_oper: LOGOR .

    $default  reduce using rule 76 (binary_oper)


State 92

   58 expr: expr binary_oper . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 119
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 93

   57 expr: unary_oper expr .
   58     | expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    LESSEQUALS     [reduce using rule 57 (expr)]
    LESS           [reduce using rule 57 (expr)]
    GREATEREQUALS  [reduce using rule 57 (expr)]
    GREATER        [reduce using rule 57 (expr)]
    EQUALS         [reduce using rule 57 (expr)]
    NOTEQUALS      [reduce using rule 57 (expr)]
    PLUS           [reduce using rule 57 (expr)]
    MINUS          [reduce using rule 57 (expr)]
    STAR           [reduce using rule 57 (expr)]
    SLASH          [reduce using rule 57 (expr)]
    MODULO         [reduce using rule 57 (expr)]
    LOGAND         [reduce using rule 57 (expr)]
    LOGOR          [reduce using rule 57 (expr)]
    $default       reduce using rule 57 (expr)

    binary_oper  go to state 92


State 94

   78 array_elem_exp: ident array_index .
   81 array_index: array_index . LSQUARE expr RSQUARE

    LSQUARE  shift, and go to state 116

    LSQUARE   [reduce using rule 78 (array_elem_exp)]
    $default  reduce using rule 78 (array_elem_exp)


State 95

   82 int_liter: int_sign INTEGER .

    $default  reduce using rule 82 (int_liter)


State 96

   22 statement: WHILE expr DO . statement DONE

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement       go to state 120
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 97

   46 pair_type: PAIR . LPAREN pair_elem_type COMMA pair_elem_type RPAREN
   49 pair_elem_type: PAIR .

    LPAREN  shift, and go to state 62

    $default  reduce using rule 49 (pair_elem_type)


State 98

   45 array_type: type . LSQUARE RSQUARE

    LSQUARE  shift, and go to state 71


State 99

   38 type: base_type .
   47 pair_elem_type: base_type .

    LSQUARE   reduce using rule 38 (type)
    $default  reduce using rule 47 (pair_elem_type)


State 100

   39 type: array_type .
   48 pair_elem_type: array_type .

    LSQUARE   reduce using rule 39 (type)
    $default  reduce using rule 48 (pair_elem_type)


State 101

   46 pair_type: PAIR LPAREN pair_elem_type . COMMA pair_elem_type RPAREN

    COMMA  shift, and go to state 121


State 102

   10 statement_seq: statement_seq SEMICOLON statement .

    $default  reduce using rule 10 (statement_seq)


State 103

   30 assign_rhs: CALL . ident LPAREN RPAREN
   31           | CALL . ident LPAREN arg_list RPAREN

    IDENTIFIER  shift, and go to state 22

    ident  go to state 122


State 104

   90 array_liter: RSQUARE . expr_list LSQUARE

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 123
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    expr_list       go to state 124
    pair_liter      go to state 57


State 105

   28 assign_rhs: NEWPAIR . LPAREN expr COMMA expr RPAREN

    LPAREN  shift, and go to state 125


State 106

   34 pair_elem_rhs: FST . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 126
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 107

   35 pair_elem_rhs: SND . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 127
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 108

   14 statement: assign_lhs ASSIGN assign_rhs .

    $default  reduce using rule 14 (statement)


State 109

   29 assign_rhs: pair_elem_rhs .

    $default  reduce using rule 29 (assign_rhs)


State 110

   26 assign_rhs: expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 26 (assign_rhs)

    binary_oper  go to state 92


State 111

   27 assign_rhs: array_liter .

    $default  reduce using rule 27 (assign_rhs)


State 112

   45 array_type: type LSQUARE RSQUARE .

    $default  reduce using rule 45 (array_type)


State 113

   13 statement: type ident ASSIGN . assign_rhs

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    CALL        shift, and go to state 103
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    RSQUARE     shift, and go to state 104
    NEWPAIR     shift, and go to state 105
    FST         shift, and go to state 106
    SND         shift, and go to state 107
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    assign_rhs      go to state 128
    pair_elem_rhs   go to state 109
    expr            go to state 110
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    array_liter     go to state 111
    pair_liter      go to state 57


State 114

    4 function_declaration: type ident LPAREN . RPAREN IS statement END
    5                     | type ident LPAREN . param_list RPAREN IS statement END

    PAIR    shift, and go to state 12
    INT     shift, and go to state 13
    BOOL    shift, and go to state 14
    CHAR    shift, and go to state 15
    STRING  shift, and go to state 16
    RPAREN  shift, and go to state 129

    param_list  go to state 130
    param       go to state 131
    type        go to state 132
    base_type   go to state 29
    array_type  go to state 30
    pair_type   go to state 31


State 115

   58 expr: expr . binary_oper expr
   80 array_index: LSQUARE expr . RSQUARE

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91
    RSQUARE        shift, and go to state 133

    binary_oper  go to state 92


State 116

   81 array_index: array_index LSQUARE . expr RSQUARE

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 134
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 117

   59 expr: LPAREN expr RPAREN .

    $default  reduce using rule 59 (expr)


State 118

   21 statement: IF expr THEN statement . ELSE statement FI

    ELSE  shift, and go to state 135


State 119

   58 expr: expr . binary_oper expr
   58     | expr binary_oper expr .

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    LESSEQUALS     [reduce using rule 58 (expr)]
    LESS           [reduce using rule 58 (expr)]
    GREATEREQUALS  [reduce using rule 58 (expr)]
    GREATER        [reduce using rule 58 (expr)]
    EQUALS         [reduce using rule 58 (expr)]
    NOTEQUALS      [reduce using rule 58 (expr)]
    PLUS           [reduce using rule 58 (expr)]
    MINUS          [reduce using rule 58 (expr)]
    STAR           [reduce using rule 58 (expr)]
    SLASH          [reduce using rule 58 (expr)]
    MODULO         [reduce using rule 58 (expr)]
    LOGAND         [reduce using rule 58 (expr)]
    LOGOR          [reduce using rule 58 (expr)]
    $default       reduce using rule 58 (expr)

    binary_oper  go to state 92


State 120

   22 statement: WHILE expr DO statement . DONE

    DONE  shift, and go to state 136


State 121

   46 pair_type: PAIR LPAREN pair_elem_type COMMA . pair_elem_type RPAREN

    PAIR    shift, and go to state 97
    INT     shift, and go to state 13
    BOOL    shift, and go to state 14
    CHAR    shift, and go to state 15
    STRING  shift, and go to state 16

    type            go to state 98
    base_type       go to state 99
    array_type      go to state 100
    pair_type       go to state 31
    pair_elem_type  go to state 137


State 122

   30 assign_rhs: CALL ident . LPAREN RPAREN
   31           | CALL ident . LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 138


State 123

   58 expr: expr . binary_oper expr
   91 expr_list: expr .

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 91 (expr_list)

    binary_oper  go to state 92


State 124

   90 array_liter: RSQUARE expr_list . LSQUARE
   92 expr_list: expr_list . COMMA expr

    LSQUARE  shift, and go to state 139
    COMMA    shift, and go to state 140


State 125

   28 assign_rhs: NEWPAIR LPAREN . expr COMMA expr RPAREN

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 141
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 126

   34 pair_elem_rhs: FST expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 34 (pair_elem_rhs)

    binary_oper  go to state 92


State 127

   35 pair_elem_rhs: SND expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 35 (pair_elem_rhs)

    binary_oper  go to state 92


State 128

   13 statement: type ident ASSIGN assign_rhs .

    $default  reduce using rule 13 (statement)


State 129

    4 function_declaration: type ident LPAREN RPAREN . IS statement END

    IS  shift, and go to state 142


State 130

    5 function_declaration: type ident LPAREN param_list . RPAREN IS statement END
    7 param_list: param_list . COMMA param

    RPAREN  shift, and go to state 143
    COMMA   shift, and go to state 144


State 131

    6 param_list: param .

    $default  reduce using rule 6 (param_list)


State 132

    8 param: type . ident
   45 array_type: type . LSQUARE RSQUARE

    LSQUARE     shift, and go to state 71
    IDENTIFIER  shift, and go to state 22

    ident  go to state 145


State 133

   80 array_index: LSQUARE expr RSQUARE .

    $default  reduce using rule 80 (array_index)


State 134

   58 expr: expr . binary_oper expr
   81 array_index: array_index LSQUARE expr . RSQUARE

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91
    RSQUARE        shift, and go to state 146

    binary_oper  go to state 92


State 135

   21 statement: IF expr THEN statement ELSE . statement FI

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement       go to state 147
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 136

   22 statement: WHILE expr DO statement DONE .

    $default  reduce using rule 22 (statement)


State 137

   46 pair_type: PAIR LPAREN pair_elem_type COMMA pair_elem_type . RPAREN

    RPAREN  shift, and go to state 148


State 138

   30 assign_rhs: CALL ident LPAREN . RPAREN
   31           | CALL ident LPAREN . arg_list RPAREN

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    RPAREN      shift, and go to state 149
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    arg_list        go to state 150
    expr            go to state 151
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 139

   90 array_liter: RSQUARE expr_list LSQUARE .

    $default  reduce using rule 90 (array_liter)


State 140

   92 expr_list: expr_list COMMA . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 152
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 141

   28 assign_rhs: NEWPAIR LPAREN expr . COMMA expr RPAREN
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91
    COMMA          shift, and go to state 153

    binary_oper  go to state 92


State 142

    4 function_declaration: type ident LPAREN RPAREN IS . statement END

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement       go to state 154
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 143

    5 function_declaration: type ident LPAREN param_list RPAREN . IS statement END

    IS  shift, and go to state 155


State 144

    7 param_list: param_list COMMA . param

    PAIR    shift, and go to state 12
    INT     shift, and go to state 13
    BOOL    shift, and go to state 14
    CHAR    shift, and go to state 15
    STRING  shift, and go to state 16

    param       go to state 156
    type        go to state 132
    base_type   go to state 29
    array_type  go to state 30
    pair_type   go to state 31


State 145

    8 param: type ident .

    $default  reduce using rule 8 (param)


State 146

   81 array_index: array_index LSQUARE expr RSQUARE .

    $default  reduce using rule 81 (array_index)


State 147

   21 statement: IF expr THEN statement ELSE statement . FI

    FI  shift, and go to state 157


State 148

   46 pair_type: PAIR LPAREN pair_elem_type COMMA pair_elem_type RPAREN .

    $default  reduce using rule 46 (pair_type)


State 149

   30 assign_rhs: CALL ident LPAREN RPAREN .

    $default  reduce using rule 30 (assign_rhs)


State 150

   31 assign_rhs: CALL ident LPAREN arg_list . RPAREN
   33 arg_list: arg_list . COMMA expr

    RPAREN  shift, and go to state 158
    COMMA   shift, and go to state 159


State 151

   32 arg_list: expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 32 (arg_list)

    binary_oper  go to state 92


State 152

   58 expr: expr . binary_oper expr
   92 expr_list: expr_list COMMA expr .

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 92 (expr_list)

    binary_oper  go to state 92


State 153

   28 assign_rhs: NEWPAIR LPAREN expr COMMA . expr RPAREN

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 160
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 154

    4 function_declaration: type ident LPAREN RPAREN IS statement . END

    END  shift, and go to state 161


State 155

    5 function_declaration: type ident LPAREN param_list RPAREN IS . statement END

    BEGIN       shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    SKIP        shift, and go to state 8
    FREE        shift, and go to state 9
    EXIT        shift, and go to state 10
    RETURN      shift, and go to state 11
    PAIR        shift, and go to state 12
    INT         shift, and go to state 13
    BOOL        shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    PRINT       shift, and go to state 17
    PRINTLN     shift, and go to state 18
    READ        shift, and go to state 19
    FST         shift, and go to state 20
    SND         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    statement       go to state 162
    assign_lhs      go to state 26
    pair_elem_lhs   go to state 27
    type            go to state 35
    base_type       go to state 29
    array_type      go to state 30
    pair_type       go to state 31
    ident           go to state 32
    array_elem_lhs  go to state 33


State 156

    7 param_list: param_list COMMA param .

    $default  reduce using rule 7 (param_list)


State 157

   21 statement: IF expr THEN statement ELSE statement FI .

    $default  reduce using rule 21 (statement)


State 158

   31 assign_rhs: CALL ident LPAREN arg_list RPAREN .

    $default  reduce using rule 31 (assign_rhs)


State 159

   33 arg_list: arg_list COMMA . expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NULL        shift, and go to state 38
    BANG        shift, and go to state 39
    PLUS        shift, and go to state 40
    MINUS       shift, and go to state 41
    LPAREN      shift, and go to state 42
    LEN         shift, and go to state 43
    ORD         shift, and go to state 44
    CHR         shift, and go to state 45
    IDENTIFIER  shift, and go to state 22
    STRINGLIT   shift, and go to state 46
    CHARLIT     shift, and go to state 47

    $default  reduce using rule 83 (int_sign)

    expr            go to state 163
    unary_oper      go to state 49
    ident           go to state 50
    array_elem_exp  go to state 51
    int_liter       go to state 52
    int_sign        go to state 53
    bool_liter      go to state 54
    char_liter      go to state 55
    str_liter       go to state 56
    pair_liter      go to state 57


State 160

   28 assign_rhs: NEWPAIR LPAREN expr COMMA expr . RPAREN
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91
    RPAREN         shift, and go to state 164

    binary_oper  go to state 92


State 161

    4 function_declaration: type ident LPAREN RPAREN IS statement END .

    $default  reduce using rule 4 (function_declaration)


State 162

    5 function_declaration: type ident LPAREN param_list RPAREN IS statement . END

    END  shift, and go to state 165


State 163

   33 arg_list: arg_list COMMA expr .
   58 expr: expr . binary_oper expr

    LESSEQUALS     shift, and go to state 79
    LESS           shift, and go to state 80
    GREATEREQUALS  shift, and go to state 81
    GREATER        shift, and go to state 82
    EQUALS         shift, and go to state 83
    NOTEQUALS      shift, and go to state 84
    PLUS           shift, and go to state 85
    MINUS          shift, and go to state 86
    STAR           shift, and go to state 87
    SLASH          shift, and go to state 88
    MODULO         shift, and go to state 89
    LOGAND         shift, and go to state 90
    LOGOR          shift, and go to state 91

    $default  reduce using rule 33 (arg_list)

    binary_oper  go to state 92


State 164

   28 assign_rhs: NEWPAIR LPAREN expr COMMA expr RPAREN .

    $default  reduce using rule 28 (assign_rhs)


State 165

    5 function_declaration: type ident LPAREN param_list RPAREN IS statement END .

    $default  reduce using rule 5 (function_declaration)
